pre-commit:
  parallel: true
  commands:
    format-and-lint:
      run: |
        STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM)
        if [ -n "$STAGED_FILES" ]; then
          echo "Running format on staged files..."
          if ! echo "$STAGED_FILES" | xargs -r npm run format; then
            echo "❌ Formatting failed" >&2
            exit 1
          fi
          
          echo "Running lint on staged files..."
          if ! echo "$STAGED_FILES" | xargs -r npm run lint; then
            echo "❌ Linting failed" >&2
            exit 1
          fi
          
          echo "Re-adding formatted files..."
          # Only add files that are not gitignored
          echo "$STAGED_FILES" | xargs -r git add --ignore-errors 2>/dev/null || true
        fi
      fail_text: 'Code formatting or linting failed'
    spellcheck:
      run: |
        STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM)
        if [ -n "$STAGED_FILES" ]; then
          if ! npx cspell --show-suggestions $STAGED_FILES; then
            echo "❌ Spell check failed" >&2
            exit 1
          fi
        fi
      fail_text: 'Spell check failed'
    test-coverage:
      run: |
        if ! npm run test:coverage; then
          echo "❌ Unit tests failed or coverage below requirements" >&2
          exit 1
        fi
      fail_text: 'Unit tests failed or coverage below 85%'

pre-push:
  parallel: true
  commands:
    tests:
      run: npm run test:all
      fail_text: 'All tests (unit + integration) must pass before pushing'
    build:
      run: npm run build
      fail_text: 'Project must build successfully before pushing'

commit-msg:
  parallel: true
  commands:
    commitlint:
      run: |
        echo "Running commitlint validation..."
        OUTPUT=$(npm run commitlint -- {1} 2>&1)
        STATUS=$?
        echo "$OUTPUT"

        # If commitlint exited with non-zero (errors), fail immediately
        if [ $STATUS -ne 0 ]; then
          echo "❌ Commit message validation failed with errors" >&2
          exit $STATUS
        fi

        # Treat any 'warning' lines as failure to enforce stricter policy
        if echo "$OUTPUT" | grep -qi "warning"; then
          echo "❌ Commit message contains warnings (treated as errors by lefthook)" >&2
          exit 1
        fi

        echo "✅ Commit message validation passed"
      fail_text: 'Commit message does not follow conventional commit format'
